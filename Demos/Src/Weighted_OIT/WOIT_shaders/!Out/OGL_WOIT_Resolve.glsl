{
 "Vertex": "#version 330\r\nstruct vec1 {\r\n\tfloat x;\r\n};\r\nstruct uvec1 {\r\n\tuint x;\r\n};\r\nstruct ivec1 {\r\n\tint x;\r\n};\r\nuniform \tmat4x4 M_Matrix;\r\nuniform \tmat4x4 MVP_Matrix;\r\nuniform \tmat4x4 MV_Matrix;\r\nuniform \tmat4x4 P_Matrix;\r\nuniform \tmat4x4 M_InverseMatrix;\r\nuniform \tmat4x4 MVP_InverseMatrix;\r\nuniform \tmat4x4 MV_InverseMatrix;\r\nuniform \tmat4x4 P_InverseMatrix;\r\nuniform \tmat4x4 VP_Matrix;\r\nuniform \tmat4x4 VP_InverseMatrix;\r\nuniform \tmat4x4 V_Matrix;\r\nuniform \tmat4x4 V_InverseMatrix;\r\nuniform \tvec2 FBOFlip;\r\n in  vec2 in_vsCoord0;\r\nvec2 Input0;\r\n#undef Output0\r\n#define Output0 phase0_Output0\r\nvec4 phase0_Output0;\r\n out  vec2 TexCrd0;\r\nvec4 Output1;\r\nvec4 Temp[1];\r\nivec4 Temp_int[1];\r\nuvec4 Temp_uint[1];\r\nvoid main()\r\n{\r\n    Input0 = in_vsCoord0;\r\n    Output0.xy = Input0.xy;\r\n    Output0.zw = vec2(intBitsToFloat(0x3F000000), intBitsToFloat(0x3F800000));\r\n    Temp[0].xy = Input0.xy * FBOFlip.xy;\r\n    Output1.xy = Temp[0].xy * vec2(intBitsToFloat(0x3F000000), intBitsToFloat(int(0xBF000000))) + vec2(intBitsToFloat(0x3F000000), intBitsToFloat(0x3F000000));\r\n    gl_Position = vec4(phase0_Output0);\r\nTexCrd0.xy = Output1.xy;\r\n    return;\r\n}\r\n",
 "Fragment": "#version 330\r\nstruct vec1 {\r\n\tfloat x;\r\n};\r\nstruct uvec1 {\r\n\tuint x;\r\n};\r\nstruct ivec1 {\r\n\tint x;\r\n};\r\nuniform sampler2D Accum;\r\nuniform sampler2D Product;\r\n in  vec2 TexCrd0;\r\nvec2 Input1;\r\nlayout(location = 0) out  vec4 SV_Target0;\r\n#define Output0 SV_Target0\r\nvec4 Temp[1];\r\nivec4 Temp_int[1];\r\nuvec4 Temp_uint[1];\r\nvoid main()\r\n{\r\n    Input1 = TexCrd0;\r\n    Temp[0] = texture(Accum, Input1.xy);\r\n    Temp[0].w = max(Temp[0].w, intBitsToFloat(0x3727C5AC));\r\n    Output0.xyz = Temp[0].xyz \/ Temp[0].www;\r\n    Temp[0] = texture(Product, Input1.xy);\r\n    Output0.w = (-Temp[0].x) + intBitsToFloat(0x3F800000);\r\n    return;\r\n}\r\n",
 "Name": "WOIT_Resolve"
}