{
 "Vertex": "#version 430\r\n#define vec1 float\r\n#define uvec1 uint\r\n#define ivec1 int\r\nout gl_PerVertex {\r\nvec4 gl_Position;\r\nfloat gl_PointSize;\r\nfloat gl_ClipDistance[];};\r\nuniform \tvec2 FBOFlip;\r\n in  vec2 in_vsCoord0;\r\nvec2 Input0;\r\n#undef Output0\r\n#define Output0 phase0_Output0\r\nvec4 phase0_Output0;\r\n out  vec2 TexCoord0;\r\nvec4 Output1;\r\nvec4 Temp[1];\r\nivec4 Temp_int[1];\r\nuvec4 Temp_uint[1];\r\nvoid main()\r\n{\r\n    Input0 = in_vsCoord0;\r\n    Output0.xy = Input0.xy;\r\n    Output0.zw = vec2(intBitsToFloat(0x0), intBitsToFloat(0x3F800000));\r\n    Temp[0].xy = Input0.xy * FBOFlip.xy;\r\n    Temp[0].xy = Temp[0].xy * vec2(intBitsToFloat(0x3F800000), intBitsToFloat(int(0xBF800000))) + vec2(intBitsToFloat(0x3F800000), intBitsToFloat(0x3F800000));\r\n    Output1.xy = Temp[0].xy * vec2(intBitsToFloat(0x3F000000), intBitsToFloat(0x3F000000));\r\n    gl_Position = vec4(phase0_Output0);\r\nTexCoord0.xy = Output1.xy;\r\n    return;\r\n}\r\n",
 "Fragment": "#version 430\r\n#define vec1 float\r\n#define uvec1 uint\r\n#define ivec1 int\r\nuniform sampler2D SrcTex;\r\n in  vec2 TexCoord0;\r\nvec2 Input1;\r\nlayout(location = 0) out  vec4 SV_Target0;\r\n#define Output0 SV_Target0\r\nvec4 Temp[1];\r\nivec4 Temp_int[1];\r\nuvec4 Temp_uint[1];\r\nvoid main()\r\n{\r\n    Input1 = TexCoord0;\r\n    Temp[0] = texture(SrcTex, Input1.xy);\r\n    Temp[0].x = uintBitsToFloat((Temp[0].w<intBitsToFloat(0x3F800000)) ? 0xFFFFFFFFu : 0u);\r\n    Output0 = uintBitsToFloat(floatBitsToUint(Temp[0]).xxxx & uvec4(2139095040u, 2139095040u, 2139095040u, 2139095040u));\r\n    return;\r\n}\r\n",
 "Name": "prepare"
}