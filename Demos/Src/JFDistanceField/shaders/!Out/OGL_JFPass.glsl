{
 "Vertex": "#version 430\r\n#define vec1 float\r\n#define uvec1 uint\r\n#define ivec1 int\r\nout gl_PerVertex {\r\nvec4 gl_Position;\r\nfloat gl_PointSize;\r\nfloat gl_ClipDistance[];};\r\nuniform \tvec2 FBOFlip;\r\n in  vec2 in_vsCoord0;\r\nvec2 Input0;\r\n#undef Output0\r\n#define Output0 phase0_Output0\r\nvec4 phase0_Output0;\r\n out  vec2 TexCoord0;\r\nvec4 Output1;\r\nvec4 Temp[1];\r\nivec4 Temp_int[1];\r\nuvec4 Temp_uint[1];\r\nvoid main()\r\n{\r\n    Input0 = in_vsCoord0;\r\n    Output0.xy = Input0.xy;\r\n    Output0.zw = vec2(intBitsToFloat(0x0), intBitsToFloat(0x3F800000));\r\n    Temp[0].xy = Input0.xy * FBOFlip.xy;\r\n    Temp[0].xy = Temp[0].xy * vec2(intBitsToFloat(0x3F800000), intBitsToFloat(int(0xBF800000))) + vec2(intBitsToFloat(0x3F800000), intBitsToFloat(0x3F800000));\r\n    Output1.xy = Temp[0].xy * vec2(intBitsToFloat(0x3F000000), intBitsToFloat(0x3F000000));\r\n    gl_Position = vec4(phase0_Output0);\r\nTexCoord0.xy = Output1.xy;\r\n    return;\r\n}\r\n",
 "Fragment": "#version 430\r\n#define vec1 float\r\n#define uvec1 uint\r\n#define ivec1 int\r\nuniform \tvec2 JumpStep;\r\nuniform \tfloat Aspect;\r\nuniform sampler2D SrcDistanceField;\r\n in  vec2 TexCoord0;\r\nvec2 Input1;\r\nlayout(location = 0) out  vec4 SV_Target0;\r\n#define Output0 SV_Target0\r\nvec4 Temp[5];\r\nivec4 Temp_int[5];\r\nuvec4 Temp_uint[5];\r\nvoid main()\r\n{\r\n    Input1 = TexCoord0;\r\n    Temp_int[0] = ivec4(int(0x7F800000), int(0x7F800000), int(0x7F800000), int(0xFFFFFFFF));\r\n    while(true){\r\n        \/\/ IGE+BREAKC opt\r\n        if ((Temp_int[0].w>= 0x2)) { break; }\r\n        Temp[1].x = uintBitsToFloat((Temp_int[0].w>=0x2) ? 0xFFFFFFFFu : 0u);\r\n        Temp[1].y = vec4(Temp_int[0].w.xxxx).y;\r\n        Temp[2].xyz = intBitsToFloat(Temp_int[0].xyz);\r\n        Temp[1].z = intBitsToFloat(int(0xFFFFFFFF));\r\n        while(true){\r\n            \/\/ IGE+BREAKC opt\r\n            if ((floatBitsToInt(Temp[1]).z>= 0x2)) { break; }\r\n            Temp[1].w = uintBitsToFloat((floatBitsToInt(Temp[1]).z>=0x2) ? 0xFFFFFFFFu : 0u);\r\n            Temp[1].x = vec4(floatBitsToInt(Temp[1]).z.xxxx).x;\r\n            Temp[3].xy = JumpStep.xy * Temp[1].xy + Input1.xy;\r\n            Temp[3] = texture(SrcDistanceField, Temp[3].xy);\r\n            Temp[3].xy = JumpStep.xy * Temp[1].xy + Temp[3].xy;\r\n            Temp[4].x = Temp[3].x * Aspect;\r\n            Temp[4].y = Temp[3].y;\r\n            Temp[3].z = dot(Temp[4].xy, Temp[4].xy);\r\n            Temp[1].x = uintBitsToFloat((Temp[3].z<Temp[2].z) ? 0xFFFFFFFFu : 0u);\r\n            Temp[2].xyz = (floatBitsToInt(Temp[1]).xxxx.x != 0) ? Temp[3].xyz : Temp[2].xyz;\r\n            Temp[1].z = intBitsToFloat(floatBitsToInt(Temp[1]).z + 0x1);\r\n        }\r\n        Temp_int[0].xyz = floatBitsToInt(Temp[2].xyz);\r\n        Temp_int[0].w = Temp_int[0].w + 0x1;\r\n    }\r\n    Output0.xy = intBitsToFloat(Temp_int[0].xy);\r\n    Output0.zw = vec2(intBitsToFloat(0x0), intBitsToFloat(0x0));\r\n    return;\r\n}\r\n",
 "Name": "JFPass"
}