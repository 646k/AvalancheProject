{
 "fragment": "#version 330\r\nstruct vec1 {\r\n\tfloat x;\r\n};\r\nstruct uvec1 {\r\n\tuint x;\r\n};\r\nstruct ivec1 {\r\n\tint x;\r\n};\r\n in  vec4 Color1;\r\nvec4 Input1;\r\nlayout(location = 0) out  vec4 SV_Target0;\r\n#define Output0 SV_Target0\r\nvoid main()\r\n{\r\n    Input1 = Color1;\r\n    Output0 = Input1;\r\n    return;\r\n}\r\n",
 "vertex": "#version 330\r\nstruct vec1 {\r\n\tfloat x;\r\n};\r\nstruct uvec1 {\r\n\tuint x;\r\n};\r\nstruct ivec1 {\r\n\tint x;\r\n};\r\nuniform \tmat4 VP_Matrix;\r\nuniform \tmat4 V_Matrix;\r\nuniform \tmat4 P_Matrix;\r\nuniform \tmat4 VP_InverseMatrix;\r\nuniform \tmat4 V_InverseMatrix;\r\nuniform \tmat4 P_InverseMatrix;\r\nuniform \tvec2 PixelSize;\r\nuniform \tfloat Rad;\r\nuniform \tvec2 FiModifier;\r\nuniform \tmat4 WndMatrix;\r\n in  vec4 in_quadCoord0;\r\nvec4 Input0;\r\n in  vec4 in_Coords0;\r\nvec4 Input1;\r\n in  vec4 in_Normals0;\r\nvec4 Input2;\r\n in  vec4 in_Width0;\r\nvec4 Input3;\r\n#undef Output0\r\n#define Output0 phase0_Output0\r\nvec4 phase0_Output0;\r\n out  vec4 Color1;\r\n#define Output1 Color1\r\nvec4 Temp[2];\r\nivec4 Temp_int[2];\r\nuvec4 Temp_uint[2];\r\nvoid main()\r\n{\r\n    Input0 = in_quadCoord0;\r\n    Input1 = in_Coords0;\r\n    Input2 = in_Normals0;\r\n    Input3 = in_Width0;\r\n    Temp[0].xy = (-Input2.xy) + Input2.zw;\r\n    Temp[0].xy = Input0.xx * Temp[0].xy + Input2.xy;\r\n    Temp[0].xy = Temp[0].xy * Input0.yy;\r\n    Temp[0].zw = (-Input1.xy) + Input1.zw;\r\n    Temp[0].zw = Input0.xx * Temp[0].zw + Input1.xy;\r\n    Temp[0].xy = Temp[0].xy * Input3.xx + Temp[0].zw;\r\n    Temp[1] = Temp[0].yyyy * WndMatrix[1];\r\n    Temp[0] = WndMatrix[0] * Temp[0].xxxx + Temp[1];\r\n    Output0 = Temp[0] + WndMatrix[3];\r\n    Output1 = vec4(intBitsToFloat(0x3F800000), intBitsToFloat(0x3F800000), intBitsToFloat(0x3F800000), intBitsToFloat(0x3F800000));\r\n    gl_Position = vec4(phase0_Output0);\r\n    return;\r\n}\r\n",
 "name": "OGL_CanvasLine"
}