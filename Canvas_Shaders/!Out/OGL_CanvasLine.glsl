{
 "Vertex": "#version 330\r\nstruct vec1 {\r\n\tfloat x;\r\n};\r\nstruct uvec1 {\r\n\tuint x;\r\n};\r\nstruct ivec1 {\r\n\tint x;\r\n};\r\nuniform \tmat4 UIMatrix;\r\nuniform \tfloat PixelToUnit;\r\n in  vec4 in_quadCoord0;\r\nvec4 Input0;\r\n in  vec4 in_Coords0;\r\nvec4 Input1;\r\n in  vec4 in_Normals0;\r\nvec4 Input2;\r\n in  vec4 in_Width0;\r\nvec4 Input3;\r\n in  vec4 in_HintingAlign0;\r\nvec4 Input4;\r\n#undef Output0\r\n#define Output0 phase0_Output0\r\nvec4 phase0_Output0;\r\n out  vec4 Color1;\r\n#define Output1 Color1\r\nvec4 Temp[2];\r\nivec4 Temp_int[2];\r\nuvec4 Temp_uint[2];\r\nvoid main()\r\n{\r\n    Input0 = in_quadCoord0;\r\n    Input1 = in_Coords0;\r\n    Input2 = in_Normals0;\r\n    Input3 = in_Width0;\r\n    Input4 = in_HintingAlign0;\r\n    Temp[0].x = Input3.y * PixelToUnit;\r\n    Temp[0].x = max(Temp[0].x, Input3.x);\r\n    Temp[0].x = Temp[0].x * intBitsToFloat(0x3F000000);\r\n    Temp[0].yz = (-Input2.xy) + Input2.zw;\r\n    Temp[0].yz = Input0.xx * Temp[0].yz + Input2.xy;\r\n    Temp[0].xy = Temp[0].xx * Temp[0].yz;\r\n    Temp[0].zw = (-Input1.xy) + Input1.zw;\r\n    Temp[0].zw = Input0.xx * Temp[0].zw + Input1.xy;\r\n    Temp[1].x = Input0.y + Input4.z;\r\n    Temp[0].xy = Temp[0].xy * Temp[1].xx + Temp[0].zw;\r\n    Temp[0].yzw = Temp[0].yyy * UIMatrix[1].xyw;\r\n    Temp[0].xyz = Temp[0].xxx * UIMatrix[0].xyw + Temp[0].yzw;\r\n    Output0.xyw = Temp[0].xyz + UIMatrix[3].xyw;\r\n    Output0.z = intBitsToFloat(0x3F000000);\r\n    Output1 = vec4(intBitsToFloat(0x3F800000), intBitsToFloat(0x3F800000), intBitsToFloat(0x3F800000), intBitsToFloat(0x3F800000));\r\n    gl_Position = vec4(phase0_Output0);\r\n    return;\r\n}\r\n",
 "Fragment": "#version 330\r\nstruct vec1 {\r\n\tfloat x;\r\n};\r\nstruct uvec1 {\r\n\tuint x;\r\n};\r\nstruct ivec1 {\r\n\tint x;\r\n};\r\nlayout(location = 0) out  vec4 SV_Target0;\r\n#define Output0 SV_Target0\r\nvoid main()\r\n{\r\n    Output0 = vec4(intBitsToFloat(0x3F800000), intBitsToFloat(0x3F800000), intBitsToFloat(0x3F800000), intBitsToFloat(0x3F800000));\r\n    return;\r\n}\r\n",
 "Name": "CanvasLine"
}